head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2019.04.23.22.22.03;	author -;	state -;
branches;
next	1.2;

1.2
date	2019.04.17.20.23.14;	author -;	state -;
branches;
next	1.1;

1.1
date	2019.04.16.19.14.45;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: 20-fib-array.oc,v 1.2 2019-04-17 13:23:14-07 - - $
//
// Put Fibonacci numbers in an array, then print them.
//

#include "oclib.h"

#define FIB_SIZE 30

int main() {
   array<int> fibonacci = alloc<array<int>> (FIB_SIZE);
   fibonacci[0] = 0;
   fibonacci[1] = 1;
   int index = 2;
   while (index < FIB_SIZE) {
      fibonacci[index] = fibonacci[index - 1] + fibonacci[index - 2];
      index = index + 1;
   }
   index = 0;
   putstr ("Numeri di figlio Bonacci\n");
   while (index < FIB_SIZE) {
      putstr ("fibonacci[");
      putint (index);
      putstr ("] = ");
      putint (fibonacci[index]);
      putchr ('\n');
      index = index + 1;
   }
   return SUCCESS;
}

@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.1 2019-04-16 12:14:45-07 - - $
a10 1
   int index = 2;
d14 1
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.1 2019-04-16 12:00:09-07 - - $
a8 1
array<int> fibonacci = nullptr;
d12 1
a12 1
   fibonacci = alloc<array<int>>(FIB_SIZE);
a14 1

a18 1

a28 1

@
