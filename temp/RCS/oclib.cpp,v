head	1.6;
access;
symbols;
locks;
comment	@// @;


1.6
date	2019.04.17.20.28.51;	author -;	state -;
branches;
next	1.5;

1.5
date	2019.04.16.23.24.47;	author -;	state -;
branches;
next	1.4;

1.4
date	2019.04.16.23.20.25;	author -;	state -;
branches;
next	1.3;

1.3
date	2019.04.16.23.00.54;	author -;	state -;
branches;
next	1.2;

1.2
date	2019.04.16.19.30.23;	author -;	state -;
branches;
next	1.1;

1.1
date	2019.04.16.19.14.45;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: oclib.c,v 1.2 2019-04-17 13:23:14-07 - - $

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "oclib.h"

extern "C" {

void fail (string expr, string file, int line) {
   fprintf (stderr, "%s:%d: assert (%s) failed\n", file, line, expr);
   abort();
}

void* xcalloc (int nelem, int size) {
   void* result = calloc (nelem, size);
   assert (result != nullptr);
   return result;
}

void putchr (int chr) { printf ("%c", chr); }
void putint (int num) { printf ("%d", num); }
void putstr (string str) { printf ("%s", str); }

int getchr() { return getchar(); }

string getstr (void) {
   static char buffer[0x1000];
   static char format[16];
   sprintf (format, "%%%zds", sizeof buffer - 1);
   int count = scanf (format, buffer);
   return count != 1 ? nullptr : strdup (buffer);
}

string getln (void) {
   static char buffer[0x1000];
   string result = fgets (buffer, sizeof buffer, stdin);
   return result == nullptr ? nullptr : strdup (result);
} 

}

@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.cpp,v 1.4 2019-04-16 16:20:25-07 - - $
d42 1
a42 1
} // end extern "C".
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.cpp,v 1.3 2019-04-16 16:00:54-07 - - $
a21 6
string xstrdup (string str) {
   string result = strdup (str);
   assert (result != nullptr);
   return result;
}

d32 2
a33 2
   int rc = scanf (format, buffer);
   return rc != 1 ? nullptr : xstrdup (buffer);
d39 1
a39 1
   return result == nullptr ? nullptr : xstrdup (result);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.cpp,v 1.2 2019-04-16 12:30:23-07 - - $
a8 2
#define MAX_BUF_SIZE 0x1000

d35 2
a36 2
   char buffer[MAX_BUF_SIZE];
   char format[16];
d39 1
a39 2
   if (rc != 1) return nullptr;
   return xstrdup (buffer);
d43 1
a43 1
   char buffer[MAX_BUF_SIZE];
d45 1
a45 2
   if (result == nullptr) return nullptr;
   return xstrdup (result);
@


1.2
log
@-
@
text
@d1 1
a1 3
// $Id: oclib.cpp,v 1.1 2019-04-16 12:14:45-07 - - $

extern "C" {
d11 2
d30 2
a31 2
void putchr (int val) { printf ("%c", val); }
void putint (int val) { printf ("%d", val); }
d52 2
a53 1
}
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.cpp,v 1.1 2019-04-16 12:00:07-07 - - $
d13 1
a13 1
void fail (char* expr, char* file, int line) {
d24 2
a25 2
char* xstrdup (char* str) {
   char* result = strdup (str);
d32 1
a32 1
void putstr (char* str) { printf ("%s", str); }
d36 1
a36 1
char* getstr (void) {
d45 1
a45 1
char* getln (void) {
d47 1
a47 1
   char* result = fgets (buffer, sizeof buffer, stdin);
@
