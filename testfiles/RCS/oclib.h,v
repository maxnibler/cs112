head	1.13;
access;
symbols;
locks;
comment	@ * @;


1.13
date	2019.09.20.00.08.34;	author -;	state -;
branches;
next	1.12;

1.12
date	2019.09.20.00.02.16;	author -;	state -;
branches;
next	1.11;

1.11
date	2019.04.25.20.03.37;	author -;	state -;
branches;
next	1.10;

1.10
date	2019.04.25.19.52.07;	author -;	state -;
branches;
next	1.9;

1.9
date	2019.04.23.22.24.04;	author -;	state -;
branches;
next	1.8;

1.8
date	2019.04.23.01.04.42;	author -;	state -;
branches;
next	1.7;

1.7
date	2019.04.18.21.06.21;	author -;	state -;
branches;
next	1.6;

1.6
date	2019.04.17.20.44.05;	author -;	state -;
branches;
next	1.5;

1.5
date	2019.04.17.20.14.40;	author -;	state -;
branches;
next	1.4;

1.4
date	2019.04.16.21.13.13;	author -;	state -;
branches;
next	1.3;

1.3
date	2019.04.16.20.16.27;	author -;	state -;
branches;
next	1.2;

1.2
date	2019.04.16.19.16.27;	author -;	state -;
branches;
next	1.1;

1.1
date	2019.04.16.19.14.45;	author -;	state -;
branches;
next	;


desc
@@


1.13
log
@-
@
text
@// $Id: oclib.h,v 1.12 2019-09-19 17:02:16-07 - - $

// Bilingual file useable as a header file for both oc and g++.

#ifndef __OCLIB_H__
#define __OCLIB_H__

#ifdef __cplusplus
extern "C" {
using string = char*;
#endif

#define SUCCESS 0
#define FAILURE 1
#define BOOL int
#define TRUE 1
#define FALSE 0
#define EOF (-1)

#define assert(expr) {if (not (expr)) fail (#expr, __FILE__, __LINE__);}

void fail (string expr, string file, int line);

void putchr (int chr);
void putint (int num);
void putstr (string str);

int getchr();
string getstr();
string getln();

#ifdef __cplusplus
}
#endif

#endif

@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.11 2019-04-25 13:03:37-07 - - $
d9 2
a10 2
   extern "C" {
   using string = char*;
d33 1
a33 1
   }
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.10 2019-04-25 12:52:07-07 - - $
d3 1
a3 1
// Bilingual file useable as a header file for both oc and c++.
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.9 2019-04-23 15:24:04-07 - - $
d9 1
a10 1
   extern "C" {
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.8 2019-04-22 18:04:42-07 - - $
a10 3
   #define END_EXTERN_C }
#else
   #define END_EXTERN_C
d32 3
a34 1
END_EXTERN_C
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.7 2019-04-18 14:06:21-07 - - $
d27 3
a29 3
void putchr (int c);
void putint (int i);
void putstr (string s);
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.6 2019-04-17 13:44:05-07 - - $
d23 1
a23 1
#define assert(expr) if (not (expr)) fail (#expr, __FILE__, __LINE__); 
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.5 2019-04-17 13:14:40-07 - - $
d18 1
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.4 2019-04-16 14:13:13-07 - - $
a12 1
   #define not !
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.3 2019-04-16 13:16:27-07 - - $
a33 2

void exit (int status);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.2 2019-04-16 12:16:27-07 - - $
d8 7
a14 9
#ifdef __STDC__
   typedef char* string;
   #ifdef __cplusplus
      extern "C" {
      #define END_EXTERN_C }
   #else
      #define not !
      #define END_EXTERN_C
   #endif
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: oclib.h,v 1.1 2019-04-16 12:14:45-07 - - $
d12 1
a12 1
      #define END }
d15 1
a15 1
      #define END
d39 1
a39 1
END
@


1.1
log
@-
@
text
@d1 3
a3 1
// $Id: oclib.h,v 1.1 2019-04-16 12:00:07-07 - - $
@
